import { getSession, useSession } from "next-auth/client";
import Head from "next/head";
import { useRouter } from "next/router";
import React from "react";
import { useCollectionOnce } from "react-firebase-hooks/firestore";
import DocHeader from "../../components/doc-header";
import Login from "../../components/login";
import db from "../../db/firebase";

const Doc = ({ session }: any) => {
  const router = useRouter();
  const { id }: any = router.query;
  if (!session) return <Login />;

  const [snapshot, loading, error]: any = useCollectionOnce<any>(
    db
      .collection("userDocs")
      .doc(session?.user?.email)
      .collection("docs")
      .doc(id)
  );

  return (
    <div>
      <Head>
        <title>{loading ? "Loading..." : snapshot?.data()?.fileName}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DocHeader loading={loading} docTitle={snapshot?.data()?.fileName} />
    </div>
  );
};

export async function getServerSideProps(context: any) {
  const session = await getSession(context);
  return {
    props: {
      session,
    },
  };
}
export default Doc;
